{"version":3,"sources":["model/sound/sound.js","model/sound/soundType.js","model/sound/player.js","model/music/chord.js","model/music/tone.js","model/music/note.js","model/music/noteBuilder.js","model/music/interval/interval.js","model/music/interval/intervalEnum.js","model/music/interval/intervalType.js","model/music/interval/intervalStepRatios.js","model/music/interval/intervalModEnum.js","model/music/interval/pureInterval.js","model/music/interval/tetInterval.js","model/music/interval/etInterval.js","model/model.js","components/chord.js","components/index.js","serviceWorker.js","index.js"],"names":["Sound","duration","sampleRate","_this","this","Object","classCallCheck","wave","undefined","addChord","chord","notes","idx","addNote","addSound","sound","addArray","note","addFreq","freq","sin","arr","length","parseInt","Float32Array","sample","Math","PI","SoundType","freeze","FLAT","FADE","Player","context","play","buf","map","v","volume","buffer","createBuffer","copyToChannel","source","createBufferSource","connect","destination","start","stop","_volume","Chord","root","arguments","soundType","addInterval","interval","intervals","push","reset","removeInterval","deleteCount","splice","_notes","_sound","generate","_soundType","_duration","Tone","toString","truncated","Number","toFixed","concat","NOTE_VALUES","C","D","E","F","G","A","B","ACCIDENTAL_VALUES","Note","key","use_flats","possibleConstructorReturn","getPrototypeOf","call","setFreq","calcFreq","setNoteKey","Error","parseNote","calcKey","calcNote","pow","_this$note","letter","accidentals","octave","_Note$parseNoteGroups","parseNoteGroups","toUpperCase","reformatAccidentals","value","accidentalsArray","Array","from","simplifyNote","center","exec","accidentalValue","valueToAccidental","substring","calcNoteValue","note_value","floor","_this$calcNoteValue","_this$getNote","getNote","value_to_note","_invertNoteValues","_this$_applySharps","_applySharps","match","RegExp","replaceAny","old_set","new_value","regexp","_","replace","SHARP","repeat","sharp","NoteBuilder","getStdA440","getNoteByName","name","getNoteByKey","Interval","type","IntervalType","BARE","IntervalEnum","UNISON","MINOR_SECOND","MAJOR_SECOND","MINOR_THIRD","MAJOR_THIRD","PERFECT_FOURTH","TRITONE","PERFECT_FIFTH","MINOR_SIXTH","MAJOR_SIXTH","MINOR_SEVENTH","MAJOR_SEVENTH","OCTAVE","ET","PURE","TET","IntervalStepRatios","IntervalModEnum","DIMINISHED","MINOR","MAJOR","AUGMENTED","PureInterval","num","den","set","ratio","isArray","MajorIntervals","MinorIntervals","TetInterval","applyInterval","mods","raise","_step","usePureInterval","buildPureInterval","buildEtInterval","_generateWithFreq","numTotal","denTotal","_this$intervals$idx","_IntervalStepRatios$t","slicedToArray","_ref","EtInterval","step","_calcStep","_this$_applyMod","_applyMod","mod","_toMinor","_toMajor","_calcLetter","indexOf","_this$intervals$idx2","_raiseNote","raiseBy","_raiseNoteBy","_lowerNoteBy","amount","_this$intervals$idx3","base","power","Model","add","chords","enabled","remove","cachedChords","enable","enableAll","disable","disableAll","getAll","_this$chords$idx","getSound","player","playAll","playing","getNoteAvatar","zipIntervalsAndNotes","react_default","a","createElement","Fragment","id","index_es","primary","secondary","JSON","stringify","_this$props","props","classes","className","paper","list","subHeader","React","Component","withStyles","theme","appBar","position","layout","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","Index","state","model","buildFakeData","r440","r440Chord","r440Chord2","A440","A440Chord","tetInterval","C4","C4Chord","setState","CssBaseline_default","AppBar_default","color","Toolbar_default","Typography_default","variant","noWrap","components_chord","Boolean","window","location","hostname","ReactDOM","render","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d4c1e07.chunk.js","sourcesContent":["class Sound {\n  wave = undefined;\n\n  constructor(duration, sampleRate) {\n    const length = parseInt(duration * sampleRate);\n    this.sampleRate = sampleRate;\n    this.wave = new Float32Array(length);\n  };\n\n  addChord = (chord) => {\n    const notes = chord.notes;\n    for (let idx in notes) {\n      this.addNote(notes[idx]);\n    }\n  };\n\n  addSound = (sound) => {\n    this.addArray(sound.wave);\n  };\n\n  addNote = (note) => {\n    this.addFreq(note.freq);\n  };\n\n  addFreq = (freq) => {\n    for (let idx in this.wave) {\n      this.wave[idx] += this.sin(idx, this.sampleRate, freq);\n    }\n  };\n\n  addArray = (arr) => {\n    for (let idx in arr) {\n      if (idx < this.wave.length) {\n        this.wave[idx] = arr[idx];\n      } else {\n        break;\n      }\n    }\n  };\n\n  sin(sample, sampleRate, freq) {\n    return Math.sin(2 * Math.PI * freq * sample / sampleRate)\n  };\n};\n\nexport default Sound;\n","const SoundType = Object.freeze({\n  FLAT: 0,\n  FADE: 1,\n});\n\nexport default SoundType;\n","class Player {\n  constructor(context) {\n    this.context = context;\n    this.volume = 0.2;\n    this.source = undefined;\n  }\n\n  get isPlaying() {\n    return this.source !== undefined;\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  set volume(volume) {\n    if (volume < 0) {\n      volume = 0;\n    } else if (volume > 1) {\n      volume = 1;\n    }\n    this._volume = volume;\n  };\n\n  play = (sound) => {\n    // build buffer\n    const buf = new Float32Array(sound.wave.map(v => v * this.volume));\n    const buffer = this.context.createBuffer(1, buf.length, this.context.sampleRate)\n    buffer.copyToChannel(buf, 0)\n\n    // build sound\n    this.source = this.context.createBufferSource();\n    this.source.buffer = buffer;\n    this.source.connect(this.context.destination);\n\n    // play\n    this.source.start(0);\n  }\n\n  stop = () => {\n    if (this.source !== undefined) {\n      this.source.stop();\n      this.source = undefined;\n    }\n  }\n};\n\nexport default Player;\n","import { SoundType, Sound } from '../sound';\n\nclass Chord {\n  constructor(root, duration = 1.0, soundType = undefined) {\n    this.root = root;\n    this.intervals = [];\n    this.duration = duration;\n    this.soundType = soundType;\n    this._notes = undefined;\n    this._sound = undefined;\n  }\n\n  get soundType() {\n    return this._soundType;\n  };\n\n  set soundType(soundType = SoundType.FLAT) {\n    if (this._soundType !== soundType) {\n      this._soundType = soundType;\n      this._sound = undefined;\n    }\n  };\n\n  get duration() {\n    return this._duration;\n  };\n\n  set duration(duration) {\n    if (duration < 0) {\n      duration = 0.0;\n    } else if (duration > 1.0) {\n      duration = 1.0;\n    }\n    if (this._duration !== duration) {\n      this._duration = duration;\n      this._sound = undefined;\n    }\n  };\n\n  get notes() {\n    if (this._notes === undefined) {\n      this._notes = [this.root];\n      for (let idx in this.intervals) {\n        const note = this.intervals[idx].generate(this.root);\n        this._notes.push(note);\n      }\n    }\n    return this._notes;\n  };\n\n  get sound() {\n    return this._sound;\n  };\n\n  addInterval = (interval) => {\n    this.intervals.push(interval);\n    this.reset();\n  };\n\n  removeInterval = (idx, deleteCount = 1) => {\n    this.intervals.splice(idx, deleteCount);\n    this.reset();\n  };\n\n  reset = () => {\n    this._notes = undefined;\n    this._sound = undefined;\n  };\n\n  generate = (sampleRate = 44100 /* 44.1kHz */) => {\n    if (this._sound === undefined) {\n      this._sound = new Sound(this.duration, sampleRate);\n      this._sound.addChord(this);\n    }\n    return this._sound;\n  };\n};\n\nexport default Chord;\n","class Tone {\n  constructor(freq) {\n    this.freq = freq;\n  }\n\n  toString = () => {\n    const truncated = Number(this.freq.toFixed(2));\n    return `${truncated} Hz`;\n  };\n}\n\nexport default Tone;\n","import _ from 'lodash';\nimport { Tone } from '.';\n\n// primary symbols\nconst SHARP = '♯';\nconst DOUBLE_SHARP = '𝄪';\nconst NATURAL = '♮';\nconst FLAT = '♭';\n\n// groups\nconst SHARPS = 'sS#' + SHARP;\nconst DOUBLE_SHARPS = 'xX' + DOUBLE_SHARP;\nconst NATURALS = 'nN' + NATURAL;\nconst FLATS = 'bB' + FLAT;\n\n// symbol values\nconst NOTE_VALUES = Object.freeze({\n  'C': 0,\n  'D': 2,\n  'E': 4,\n  'F': 5,\n  'G': 7,\n  'A': 9,\n  'B': 11,\n});\n\nconst ACCIDENTAL_VALUES = {};\nACCIDENTAL_VALUES[DOUBLE_SHARP] = 2;\nACCIDENTAL_VALUES[SHARP] = 1;\nACCIDENTAL_VALUES[NATURAL] = 0;\nACCIDENTAL_VALUES[FLAT] = -1;\n\nclass Note extends Tone {\n  constructor(freq, note, key, use_flats = false) {\n    super(freq);\n    this.use_flats = use_flats;\n    this.setNoteKey(note, key);\n    this.setFreq(freq);\n  }\n\n  setFreq = (freq) => {\n    if (freq === undefined) { // calculate freq if not given\n      this.freq = this.calcFreq();\n    }\n  };\n\n  setNoteKey = (note, key) => {\n    if (key === undefined && note === undefined) {\n      throw new Error(\"must specify key and note\");\n    } else if (key === undefined) { // key not given\n      this.note = this.parseNote(note);\n      this.key = this.calcKey();\n    } else if (note === undefined) { // note not given\n      this.key = key;\n      this.note = this.calcNote();\n    } else { // note and key given\n      this.note = this.parseNote(note);\n      this.key = key;\n    }\n  };\n\n  get name() {\n    return this.toString();\n  }\n\n  calcFreq = () => {\n    if (this.freq === undefined) {\n      return 440 * Math.pow(2, (this.key - 49) / 12);\n    } else {\n      return this.freq;\n    }\n  };\n\n  toString = () => {\n    const { letter, accidentals, octave } = this.note;\n    return letter + accidentals + octave;\n  };\n\n  parseNote = (note) => {\n    let { letter, accidentals, octave } = Note.parseNoteGroups(note)\n    letter = letter.toUpperCase();\n    accidentals = Note.reformatAccidentals(accidentals);\n    return { letter: letter, accidentals: accidentals, octave: octave };\n  };\n\n  static parseNoteGroups = (note) => {\n    const accidentals = SHARPS + DOUBLE_SHARPS + NATURALS + FLATS;\n    const noteRegex = new RegExp(\"^([A-Ga-g])([\" + accidentals + \"]*)([-]?[0-9]+)$\")\n    const match = noteRegex.exec(note);\n    if (match === null) {\n      throw new Error(\"Invalid Note: \" + note);\n    }\n    return { letter: match[1], accidentals: match[2], octave: match[3] }\n  };\n\n  static replaceAny = (value, old_set, new_value) => {\n    for (let idx in old_set) {\n      const regexp = new RegExp(old_set[idx], \"g\")\n      value = _.replace(value, regexp, new_value)\n    }\n    return value\n  };\n\n  static reformatAccidentals = (accidentals) => {\n    accidentals = Note.replaceAny(accidentals, SHARPS, SHARP);\n    accidentals = Note.replaceAny(accidentals, DOUBLE_SHARPS, SHARP + SHARP);\n    accidentals = Note.replaceAny(accidentals, FLATS, FLAT);\n    accidentals = Note.replaceAny(accidentals, NATURALS, NATURAL);\n    let value = 0;\n    for (let idx in accidentals) {\n      value += ACCIDENTAL_VALUES[accidentals[idx]];\n    }\n    return Note.valueToAccidental(value);\n  };\n\n  static valueToAccidental = (value) => {\n    if (value < 0) {\n      return _.repeat(FLAT, -value);\n    } else if (value === 0) {\n      return \"\";\n    } else {\n      const sharp = _.repeat(SHARP, value % 2);\n      const doubleSharp = _.repeat(DOUBLE_SHARP, Math.floor(value / 2));\n      return doubleSharp + sharp;\n    }\n  };\n\n  calcKey = (note = this.note) => {\n    let { letter, accidentals, octave } = note;\n    let value = NOTE_VALUES[letter]; // get note value\n    const accidentalsArray = Array.from(accidentals);\n    for (let idx in accidentalsArray) {\n      value += ACCIDENTAL_VALUES[accidentalsArray[idx]];\n    }\n    value -= 8; // adjust for A0, change to 9 for A0=0\n    value += 12 * parseInt(octave); // add octave shift\n    return value;\n  };\n\n  simplifyNote = (use_flats = this.use_flats, center) => {\n    if (center === undefined) {\n      this.note = this.calcNote(use_flats);\n    } else {\n      center = center.toUpperCase();\n      if (center.length === 1) {\n        center += this.note.octave;\n      }\n      const paramCheck = /^[A-G][0-9]+$/\n      if (paramCheck.exec(center) === null) {\n        throw new Error(\"invalid note\")\n      }\n      this.center(center);\n    }\n  };\n\n  center = (center) => {\n    const root = new Note(undefined, center);\n    const accidentalValue = this.key - root.key;\n    const accidentals = Note.valueToAccidental(accidentalValue);\n    this.note.accidentals = accidentals;\n    this.note.letter = center[0];\n    this.note.octave = center.substring(1);\n  };\n\n  calcNoteValue = () => {\n    let value = this.key;\n    value += 8; // undo A0 adjustment\n    const note_value = value % 12;\n    const octave = Math.floor(value / 12).toString();\n    return { note_value: note_value, octave: octave };\n  }\n\n  calcNote = (use_flats = this.use_flats) => {\n    const { note_value, octave } = this.calcNoteValue();\n    const { letter, accidentals } = this.getNote(note_value, use_flats);\n    return { letter: letter, accidentals: accidentals, octave: octave };\n  };\n\n  static _invertNoteValues = () => {\n    let value_to_note = {};\n    for (let key in NOTE_VALUES) {\n      value_to_note[NOTE_VALUES[key]] = key;\n    }\n    return value_to_note;\n  };\n\n  getNote(note_value, use_flats) {\n    let letter;\n    let accidentals;\n    let value_to_note = Note._invertNoteValues();\n    if (!(note_value in value_to_note)) {\n      ({ letter, accidentals } = this._applySharps(use_flats, letter, value_to_note, note_value, accidentals));\n    } else {\n      letter = value_to_note[note_value];\n      accidentals = \"\";\n    }\n    return { letter: letter, accidentals: accidentals };\n  }\n\n  _applySharps(use_flats, letter, value_to_note, note_value, accidentals) {\n    if (use_flats) {\n      letter = value_to_note[(note_value + 1) % 12];\n      accidentals = FLAT;\n    }\n    else {\n      letter = value_to_note[(note_value + 11) % 12];\n      accidentals = SHARP;\n    }\n    return { letter, accidentals };\n  }\n};\n\nexport default Note;\n","import { Note } from '.';\n\nclass NoteBuilder {\n  static getStdA440 = () => {\n    return new Note(440, \"A4\", 49);\n  };\n\n  static getNoteByName = (name) => {\n    const note = new Note(undefined, name, undefined);\n    return note;\n  };\n\n  static getNoteByKey = (key) => {\n    const note = new Note(undefined, undefined, key);\n    return note;\n  };\n};\n\nexport default NoteBuilder;\n","import { Tone } from '..';\nimport { IntervalType } from '.';\n\nclass Interval {\n  type = IntervalType.BARE;\n\n  generate = (root) => {\n    // unison by default.\n    const { freq, name, key } = root;\n    return new Tone(freq, name, key);\n  }\n};\n\nexport default Interval;\n","const IntervalEnum = Object.freeze({\n  UNISON: 0,\n  MINOR_SECOND: 1,\n  MAJOR_SECOND: 2,\n  MINOR_THIRD: 3,\n  MAJOR_THIRD: 4,\n  PERFECT_FOURTH: 5,\n  TRITONE: 6, // the diminished fifth\n  PERFECT_FIFTH: 7,\n  MINOR_SIXTH: 8,\n  MAJOR_SIXTH: 9,\n  MINOR_SEVENTH: 10,\n  MAJOR_SEVENTH: 11,\n  OCTAVE: 12,\n});\n\nexport default IntervalEnum;\n","const IntervalType = Object.freeze({\n  BARE: 0,\n  ET: 1,\n  PURE: 2,\n  TET: 3,\n});\n\nexport default IntervalType;\n","const IntervalStepRatios = Object.freeze([\n  [1, 1],\n  [16, 15],\n  [9, 8],\n  [6, 5],\n  [5, 4],\n  [4, 3],\n  [7, 5],\n  [3, 2],\n  [8, 5],\n  [5, 3],\n  [16, 9],\n  [15, 8],\n  [2, 1],\n]);\n\nexport default IntervalStepRatios;\n","const IntervalModEnum = Object.freeze({\n  DIMINISHED: 0,\n  MINOR: 1,\n  MAJOR: 2,\n  AUGMENTED: 3,\n});\n\nexport default IntervalModEnum;\n","import { Interval, IntervalType } from '.';\nimport { Tone } from '..';\n\nclass PureInterval extends Interval {\n  constructor(num, den) {\n    super();\n    this.set(num, den);\n    this.type = IntervalType.PURE;\n  }\n\n  set ratio(ratio) {\n    if (Array.isArray(ratio)) {\n      this.num = ratio[0];\n      this.den = ratio[1];\n    } else {\n      this.num = ratio;\n      this.den = 1;\n    }\n  }\n\n  get ratio() {\n    return this.num / this.den;\n  };\n\n  set = (num = 1, den) => {\n    if (den === undefined) {\n      this.ratio = num;\n    } else {\n      this.ratio = [num, den];\n    }\n  }\n\n  generate = (root) => {\n    return new Tone(root.freq * this.num / this.den);\n  };\n};\n\nexport default PureInterval;\n","import {\n  Interval,\n  IntervalType,\n  EtInterval,\n  PureInterval,\n  IntervalStepRatios,\n  IntervalEnum,\n  IntervalModEnum\n} from '.';\nimport { Note } from '..';\nimport _ from 'lodash';\n\nconst MajorIntervals = [\n  IntervalEnum.MAJOR_SECOND,\n  IntervalEnum.MAJOR_THIRD,\n  IntervalEnum.MAJOR_SIXTH,\n  IntervalEnum.MAJOR_SEVENTH,\n];\n\nconst MinorIntervals = [\n  IntervalEnum.MINOR_SECOND,\n  IntervalEnum.MINOR_THIRD,\n  IntervalEnum.MINOR_SIXTH,\n  IntervalEnum.MINOR_SEVENTH,\n];\n\nclass TetInterval extends Interval {\n  constructor() {\n    super();\n    this.intervals = [];\n    this.usePureInterval = false;\n    this.type = IntervalType.TET;\n    this._step = 0;\n  }\n\n  get step() {\n    if (this._step === undefined) {\n      this._step = 0;\n      for (let idx in this.intervals) {\n        const { type, mods, raise } = this.intervals[idx];\n        this._step += this._calcStep(type, mods, raise);\n      }\n    }\n    return this._step;\n  }\n\n  applyInterval = (type = IntervalEnum.UNISON, mods = [], raise = true) => {\n    if (!Array.isArray(mods)) {\n      mods = [mods];\n    }\n    this.intervals.push({ type: type, mods: mods, raise: raise });\n    this._step = undefined;\n  };\n\n  removeInterval = (idx, deleteCount = 1) => {\n    this.intervals.splice(idx, deleteCount);\n    this._step = undefined;\n  };\n\n  generate = (root) => {\n    let interval;\n    if (this.usePureInterval) {\n      interval = this.buildPureInterval();\n    } else {\n      interval = this.buildEtInterval();\n    }\n    const { freq } = interval.generate(root);\n    return this._generateWithFreq(root, freq);\n  };\n\n  buildPureInterval = () => {\n    let numTotal = 1;\n    let denTotal = 1;\n    for (let idx in this.intervals) {\n      const { type, raise } = this.intervals[idx];\n      let [num, den] = IntervalStepRatios[type]\n      if (!raise) {\n        [num, den] = [den, num];\n      }\n      numTotal *= num;\n      denTotal *= den;\n    }\n    return new PureInterval(numTotal, denTotal);\n  };\n\n  buildEtInterval = () => {\n    return new EtInterval(this.step);\n  };\n\n  _calcStep = (type, mods, raise) => {\n    let step = 0;\n    for (let idx in mods) {\n      ({ type, step } = this._applyMod(type, step, mods[idx]));\n    }\n    step = type + step;\n    if (!raise) {\n      step = -step;\n    }\n    return step;\n  };\n\n  _applyMod = (type, step, mod) => {\n    switch (mod) {\n      case IntervalModEnum.AUGMENTED:\n        step++;\n        break;\n      case IntervalModEnum.DIMINISHED:\n        step--;\n        break;\n      case IntervalModEnum.MINOR:\n        type = this._toMinor(type);\n        break;\n      case IntervalModEnum.MAJOR:\n        type = this._toMajor(type);\n        break;\n      default:\n    }\n    return { type: type, step: step };\n  };\n\n  _generateWithFreq = (root, freq) => {\n    const note = new Note(freq, undefined, root.key + this.step);\n    let center = this._calcLetter(root.note.letter + root.note.octave);\n    note.simplifyNote(undefined, center);\n    return note;\n  };\n\n  _toMinor = (type) => {\n    if (_.indexOf(MajorIntervals, type) !== -1) {\n      type--;\n    }\n    return type;\n  };\n\n  _toMajor = (type) => {\n    if (_.indexOf(MinorIntervals, type) !== -1) {\n      type++;\n    }\n    return type;\n  };\n\n  _calcLetter = (note) => {\n    for (let idx in this.intervals) {\n      const { type, raise } = this.intervals[idx];\n      note = this._raiseNote(note, type, raise);\n    }\n    return note;\n  };\n\n  _raiseNote = (letter, type, raise) => {\n    let raiseBy;\n    switch (type) {\n      case IntervalEnum.UNISON:\n        raiseBy = 0;\n        break;\n      case IntervalEnum.MINOR_SECOND:\n      case IntervalEnum.MAJOR_SECOND:\n        raiseBy = 1;\n        break;\n      case IntervalEnum.MINOR_THIRD:\n      case IntervalEnum.MAJOR_THIRD:\n        raiseBy = 2;\n        break;\n      case IntervalEnum.PERFECT_FOURTH:\n        raiseBy = 3;\n        break;\n      case IntervalEnum.TRITONE:\n      case IntervalEnum.PERFECT_FIFTH:\n        raiseBy = 4;\n        break;\n      case IntervalEnum.MINOR_SIXTH:\n      case IntervalEnum.MAJOR_SIXTH:\n        raiseBy = 5;\n        break;\n      case IntervalEnum.MINOR_SEVENTH:\n      case IntervalEnum.MAJOR_SEVENTH:\n        raiseBy = 6;\n        break;\n      case IntervalEnum.OCTAVE:\n        raiseBy = 7;\n        break;\n      default:\n    }\n    if (raise) {\n      return this._raiseNoteBy(letter, raiseBy);\n    } else {\n      return this._lowerNoteBy(letter, raiseBy);\n    }\n  };\n\n  _lowerNoteBy = (note, amount = 1) => {\n    let letter = note[0];\n    let octave = parseInt(note.substring(1));\n    for (; amount > 0; amount--) {\n      switch (letter) {\n        case 'A':\n          letter = 'G';\n          break;\n        case 'B':\n          letter = 'A';\n          break;\n        case 'C':\n          letter = 'B';\n          octave--;\n          break;\n        case 'D':\n          letter = 'C';\n          break;\n        case 'E':\n          letter = 'D';\n          break;\n        case 'F':\n          letter = 'E';\n          break;\n        case 'G':\n          letter = 'F';\n          break;\n        default:\n      }\n    }\n    return letter + octave;\n  };\n\n  _raiseNoteBy = (note, amount = 1) => {\n    let letter = note[0];\n    let octave = parseInt(note.substring(1));\n    for (; amount > 0; amount--) {\n      switch (letter) {\n        case 'A':\n          letter = 'B';\n          break;\n        case 'B':\n          letter = 'C';\n          octave++;\n          break;\n        case 'C':\n          letter = 'D';\n          break;\n        case 'D':\n          letter = 'E';\n          break;\n        case 'E':\n          letter = 'F';\n          break;\n        case 'F':\n          letter = 'G';\n          break;\n        case 'G':\n          letter = 'A';\n          break;\n        default:\n      }\n    }\n    return letter + octave;\n  };\n}\n\nexport default TetInterval;\n","import { Interval, IntervalType } from '.';\nimport { Tone } from '..';\n\nclass EtInterval extends Interval {\n  constructor(step = 0, base = 12) {\n    super();\n    this.type = IntervalType.ET;\n    this.step = step;\n    this.base = base;\n  }\n\n  generate = (root) => {\n    const power = Math.pow(2, this.step / this.base);\n    return new Tone(root.freq * power);\n  };\n};\n\nexport default EtInterval;\n","import { Player } from \"./sound\";\n\nclass Model {\n  constructor(context) {\n    this.chords = [];\n    this.player = new Player();\n    this.context = context;\n    this.playing = false;\n  }\n\n  add = (chord) => {\n    this.chords.push({ chord: chord, enabled: true });\n  };\n\n  remove = (start, deleteCount = 1) => {\n    this.cachedChords.splice(start, deleteCount);\n  };\n\n  enable = (idx) => {\n    this.chords[idx].enable = true;\n  };\n\n  enableAll = () => {\n    for (let idx in this.chords) {\n      this.enable(idx);\n    }\n  };\n\n  disable = (idx) => {\n    this.chords[idx].enable = false;\n  };\n\n  disableAll = () => {\n    for (let idx in this.chords) {\n      this.disable(idx);\n    }\n  };\n\n  getAll = () => {\n    return this.chords;\n  };\n\n  play = (idx) => {\n    const { chord, enabled } = this.chords[idx];\n    if (enabled) {\n      const sound = chord.getSound()\n      this.player.play(sound); // TODO: blocks?\n    }\n  };\n\n  playAll = () => {\n    this.playing = true;\n    for (let idx in this.chords) {\n      this.play(idx);\n      if (!this.playing) {\n        break;\n      }\n    }\n  };\n\n  stop = () => {\n    this.player.stop();\n    this.playing = false;\n  };\n};\n\nexport default Model;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Paper, ListItem, Avatar, ListItemText, ListSubheader, List } from '@material-ui/core';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass Chord extends React.Component {\n  getNoteAvatar = (note) => {\n    if (\"note\" in note) {\n      return note.note.letter;\n    } else {\n      return \"Hz\";\n    }\n  };\n\n  zipIntervalsAndNotes = (chord) => {\n    const { intervals, notes } = chord;\n    return (\n      <React.Fragment>\n        {\n          intervals.map((interval, id) => {\n            return (\n              <ListItem>\n                <Avatar>{this.getNoteAvatar(notes[id])}</Avatar>\n                <ListItemText primary={`${notes[id]}`} secondary={`${JSON.stringify(interval)}`} />\n              </ListItem>\n            )\n          })\n        }\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { classes, chord } = this.props;\n    const { root, duration, soundType } = chord;\n\n    return (\n      <Paper className={classes.paper}>\n        <List className={classes.list}>\n          <ListSubheader className={classes.subHeader}>{`Note: ${root}`}</ListSubheader>\n          <ListSubheader className={classes.subHeader}>{`Duration: ${duration}`}</ListSubheader>\n          <ListSubheader className={classes.subHeader}>{`Sound Type: ${soundType}`}</ListSubheader>\n          <ListSubheader className={classes.subHeader}>{`Intervals:`}</ListSubheader>\n          {this.zipIntervalsAndNotes(chord)}\n        </List>\n      </Paper>\n    );\n  };\n};\n\nChord.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Chord);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Chord, NoteBuilder, Tone } from '../model/music';\nimport { PureInterval, EtInterval, TetInterval, IntervalEnum } from \"../model/music/interval\";\nimport Model from '../model/model';\nimport ChordElement from './chord';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass Index extends React.Component {\n  state = {\n    model: new Model()\n  };\n\n  componentDidMount() {\n    this.buildFakeData();\n  }\n\n  buildFakeData = () => {\n    const r440 /* raw 440 hz */ = new Tone(440);\n    // chord 1\n    const r440Chord = new Chord(r440);\n    r440Chord.addInterval(new EtInterval(4));\n    // chord 2\n    const r440Chord2 = new Chord(r440);\n    r440Chord2.addInterval(new PureInterval(3, 2));\n\n    const A440 /* A4 */ = NoteBuilder.getNoteByName('A4');\n    const A440Chord = new Chord(A440);\n    const tetInterval = new TetInterval();\n    tetInterval.applyInterval(IntervalEnum.MAJOR_THIRD);\n    A440Chord.addInterval(tetInterval);\n\n    const C4 /* C4 */ = NoteBuilder.getNoteByName('C4');\n    const C4Chord = new Chord(C4);\n\n    const model = new Model();\n    model.add(r440Chord);\n    model.add(r440Chord2);\n    model.add(A440Chord);\n    model.add(C4Chord);\n\n    this.setState({ model: model });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { model: { chords } } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Pure Tone v0.3.7\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <br />\n        <main className={classes.layout}>\n          {chords.map(({ chord }, id) =>\n            <ChordElement chord={chord} key={id} />\n          )}\n        </main>\n      </React.Fragment >\n    );\n  }\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Index);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}